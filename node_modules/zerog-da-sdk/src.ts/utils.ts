import { Signer } from 'ethers';
import { Flow__factory } from './contracts/flow/index.js';
import { SubmissionStruct } from "./contracts/flow/Flow.js";

export function getFlowContract(address: string, signer: Signer) {
    return Flow__factory.connect(address, signer);
}

const LIFETIME_MONTHES         = 3;
const BYTES_PER_SECTOR         = 256;
const ANNUAL_ZGS_TOKENS_PER_GB = 10;
const GB                       = 1024 * 1024 * 1024;
const MONTH_PER_YEAR           = 12;

/*
var pricePerSector = new(big.Int).Div(
	new(big.Int).Mul(
		big.NewInt(LIFETIME_MONTHES*BYTES_PER_SECTOR*ANNUAL_ZGS_TOKENS_PER_GB/MONTH_PER_YEAR),
		new(big.Int).Exp(big.NewInt(10), big.NewInt(18), nil), // ether: 10^18
	),
	big.NewInt(GB),
)
*/
const PRICE_PER_SECTOR = BigInt(LIFETIME_MONTHES*BYTES_PER_SECTOR*ANNUAL_ZGS_TOKENS_PER_GB/MONTH_PER_YEAR) * BigInt(10**18) / BigInt(GB);

export function calculateSubmissionFee(submission: SubmissionStruct) {
    let sectors = BigInt(0);
    
    for (let node of submission.nodes) {
        // @ts-ignore
        sectors += BigInt(1) << BigInt(node.height.toString());
    }

	return BigInt(sectors) * PRICE_PER_SECTOR;
}