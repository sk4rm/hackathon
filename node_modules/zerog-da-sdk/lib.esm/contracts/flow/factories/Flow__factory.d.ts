import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common.js";
import type { Flow, FlowInterface } from "../Flow.js";
type FlowConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Flow__factory extends ContractFactory {
    constructor(...args: FlowConstructorParams);
    getDeployTransaction(_token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(_token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<Flow & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): Flow__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b50604051620031c0380380620031c0833981016040819052620000349162000261565b6000805460ff1916815560018055604080518281526020810191829052516200006091600291620001ec565b50600280546001808201835560009283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910192909255600391909155600480546001600160a01b0319166001600160a01b038416179055600855604051601490620000ce906200023c565b908152602001604051809103906000f080158015620000f1573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b03929092169190911790556200011f600043620002a9565b60078190556040805160c081018252600081526020810192909252810162000146620001b3565b815260016020808301919091527fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060408084018290526060938401919091528351600a5590830151600b55820151600c55810151600d556080810151600e5560a00151600f5550620002f1565b6002805460009190620001c990600190620002c5565b81548110620001dc57620001dc620002db565b9060005260206000200154905090565b8280548282559060005260206000209081019282156200022a579160200282015b828111156200022a5782518255916020019190600101906200020d565b50620002389291506200024a565b5090565b6106708062002b5083390190565b5b808211156200023857600081556001016200024b565b6000602082840312156200027457600080fd5b81516001600160a01b03811681146200028c57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620002bf57620002bf62000293565b92915050565b81810381811115620002bf57620002bf62000293565b634e487b7160e01b600052603260045260246000fd5b61284f80620003016000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063900cf0cf116100b8578063c7dd52211161007c578063c7dd5221146102f8578063d34353c914610323578063e82955881461032b578063ebf0c7171461033e578063ef3e12dc14610346578063fc0c546a1461037957600080fd5b8063900cf0cf146102cc57806393e405a0146102d5578063a3d35f36146102de578063b464b53e146102e7578063b8a409ac146102ef57600080fd5b80633d75d9c2116100ff5780633d75d9c214610206578063555430a1146102195780635c975abb1461022c57806377e19824146102425780637d5907081461024a57600080fd5b8063127f0f071461013c578063231b02681461019957806331bae174146101b0578063364800ec146101f357806338d45e10146101fc575b600080fd5b61014461038c565b6040516101909190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b60405180910390f35b6101a260075481565b604051908152602001610190565b6101c36101be3660046121cb565b6103fb565b6040805182516001600160801b039081168252602080850151909116908201529181015190820152606001610190565b6101a260035481565b6102046105a3565b005b6101a26102143660046121f4565b610889565b6101a261022736600461220d565b6108d5565b60005460ff166040519015158152602001610190565b6006546101a2565b6102a56102583660046121f4565b6040805180820190915260008082526020820152506000908152601060209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b039081168252602093840151169281019290925201610190565b6101a260085481565b6101a260095481565b6101a260015481565b61014461090f565b6101a260065481565b60055461030b906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b610204610978565b6101a26103393660046121f4565b610a8f565b6101a261168e565b61035961035436600461222f565b6116c2565b604080519485526020850193909352918301526060820152608001610190565b60045461030b906001600160a01b031681565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c081018252600a548152600b546020820152600c5491810191909152600d546060820152600e546080820152600f5460a082015290565b60408051606081018252600080825260208201819052918101919091526104206105a3565b600154826001600160801b03161061048b5760405162461bcd60e51b8152602060048201526024808201527f5175657269656420706f736974696f6e206578636565647320757070657220626044820152631bdd5b9960e21b60648201526084015b60405180910390fd5b6011546000905b8181111561055b57600060026104a88484612280565b6104b291906122a9565b9050601181815481106104c7576104c76122bd565b600091825260209182902060408051606081018252600290930290910180546001600160801b038082168552600160801b90910481169484018590526001909101549183019190915290955086161061052c57610525816001612280565b9250610555565b83600001516001600160801b0316856001600160801b03161061055157505050919050565b8091505b50610492565b60405162461bcd60e51b815260206004820152601b60248201527f43616e206e6f742066696e642070726f70657220636f6e7465787400000000006044820152606401610482565b6007544310156105c55760405162461bcd60e51b8152600401610482906122d3565b6008546007546001909101606402014381106105de5750565b6105e6610978565b60006105f061168e565b600554604051632d287e4360e01b8152600481018390529192506000916001600160a01b0390911690632d287e43906024016020604051808303816000875af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061230a565b9050600854811461067857610678612323565b6000804361068886610100612280565b10156106b857507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709050806107c6565b506001546040805186406020820181905291810186905260608101929092529060800160408051808303601f190181528282528051602091820120600980546001805487870187526001600160801b039283168089529083168689018181526000878152601089528981209a519151918616600160801b928716830217909a558851606081018a5292835296820190815296810185815260118054808501825599529051965196831696909216909402949094177f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6860029096029586015592517f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c699094019390935554905591505b6001600860008282546107d99190612280565b90915550506040805160c08101825260085480825260208083018990528284018890526001546060808501829052608080860188905260a0909501889052600a849055600b8b9055600c8a9055600d829055600e879055600f88905560065486518b815293840152948201529283018590529133917fbc8a3fd82465d43f1709e44ed882f7e1af0147274196ef1ec009f5d52ff4e993910160405180910390a36108816105a3565b50505050505b565b60008180820361089c5750600092915050565b600181811c909117600281901c17600481901c17600881901c17601081901c17602081901c17906108ce908290612280565b9392505050565b6000828082036108e9576000915050610909565b6108f4600182612339565b831c9050610903600182612280565b831b9150505b92915050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526007544310156109635760405162461bcd60e51b8152600401610482906122d3565b61096b6105a3565b61097361038c565b905090565b6002546003540361098557565b60028054600354909160009161099d90600190612339565b815481106109ad576109ad6122bd565b9060005260206000200154905060006109ce60016003546103399190612339565b6003549091505b83811015610a875760408051602080820186905281830185905282518083038401815260609092019092528051910120600154610a1690600290841c61234c565b600003610a5057809350610a2982610a8f565b92508060028381548110610a3f57610a3f6122bd565b600091825260209091200155610a74565b60028281548110610a6357610a636122bd565b906000526020600020015493508092505b5080610a7f81612360565b9150506109d5565b505050600355565b600081600003610ac057507fd397b3b043d87fcd6fad1291ff0bfd16401c274896d8c63a923727f077b8e0b5919050565b81600103610aef57507ff73e6947d7d1628b9976a6e40d7b278a8a16405e96324a68df45b12a51b7cfde919050565b81600203610b1e57507fa1520264ae93cac619e22e8718fc4fa7ebdd23f493cad602434d2a58ff4868fb919050565b81600303610b4d57507fde5747106ac1194a1fa9071dbd6cf19dc2bc7964497ef0afec7e4bdbcf08c47e919050565b81600403610b7c57507f09c7082879180d28c789c05fafe7030871c76cedbe82c948b165d6a1d66ac15b919050565b81600503610bab57507faa7a02bcf29fba687f84123c808b5b48834ff5395abe98e622fadc14e4180c95919050565b81600603610bda57507f7608fd46b710b589e0f2ee5a13cd9c41d432858a30d524f84c6d5db37f66273a919050565b81600703610c0957507fa5d9a2f7f3573ac9a1366bc484688b4daf934b87ea9b3bf2e703da8fd9f09708919050565b81600803610c3857507f6c1779477f4c3fca26b4607398859a43b90a286ce8062500744bd4949981757f919050565b81600903610c6757507f45c22df3d952c33d5edce122eed85e5cda3fd61939e7ad7b3e03b6927bb598ea919050565b81600a03610c9657507fe68d02859bb6211cec64f52368b77d422de3b8eac34bf615942b814b643301b5919050565b81600b03610cc557507f62d78399b954d51cb9728601738ad13ddc43b2300064660716bb661d2f4d686f919050565b81600c03610cf457507f6e250d9abdbbb3993fce08de0395cdb56f0483e67d8762a798de011f6a50866a919050565b81600d03610d2357507f1d1a3a74062fd94078617e33eb901eaf16a830f67c387d8eed342db2ac5e2cc5919050565b81600e03610d5257507f19b3b3886526917eae8650223d0be20a0301be960eb339696e673ad8a804440f919050565b81600f03610d8157507fee9e05df53f10e62a897e5140a3f58732dd849e69cd1d62b21ed80ead711a014919050565b81601003610db057507f2cc7aa6e611a113a34505dc1c96b220f14909b70e2c2c7b1a74655da21013c5e919050565b81601103610ddf57507f949b52dfece7ca3bad3cb27f7750ecaee64cedb6243a275c35984e92956c530a919050565b81601203610e0e57507fb2680d060b763b932c150434c3812ba9fbc50937e0ebcf5758de884be81bab65919050565b81601303610e3d57507f523aebf4a085edbc9c8cdc99c83f46262e5f029b395ff7bf561a48a3f387e6b8919050565b81601403610e6c57507fc9ab73827ab33c0cedb7ecf0ed2e6e32583c0fe887133a7f381ea4ba84d95b76919050565b81601503610e9b57507f23eb397dec7e564ebe97f160a5e1081a77d9861f316807079b6be4731beb331e919050565b81601603610eca57507fdfa44a274c60f090df034aaf75539fd40e94cfd6362dd53d26ed20c8ad529563919050565b81601703610ef957507f15b13ee358e1044a53381243c094e54bf7aceb9b5325a0313d6b85fd44e8b3a5919050565b81601803610f2857507f1a7a93871e2daa0f1860aa91d4ece4ccd012dac5fe581176a21b155cfeca6d40919050565b81601903610f5757507fb12665fd0b884a7c7d1e0294d369170d7e672d9e125eb87784556305f98292df919050565b81601a03610f8657507f2a5543b0b2f8cf550524390291774f4d6c8c0a25ff5393b09c44d75c92a5bd8e919050565b81601b03610fb557507ff9df1841a6e7164b67a1242f1c74975137085ffd9721831f6c469d3a4d5ba42e919050565b81601c03610fe457507fba24736b1b48246c1f7803be967be43ca0dddc9c2c0687a2957952249bc89371919050565b81601d0361101357507ff3f706b73790c73ca0a8f0460ac3a2a102e280415586b520e70cd5e8264388b4919050565b81601e0361104257507fc1f5a9a9f357e1c37814688cf7290c87a264ed3d6174a12b978da1c586f53825919050565b81601f0361107157507f766f7702e19ce23d426cdad03e4292a5a42c4669420101fed74400ec7cda3ac6919050565b816020036110a057507f070fec213e105b3e4d9b0434ac2fc7ca721d35093dc741fb9419797003e2394a919050565b816021036110cf57507f9a7aade05b49e43f5fd3782571cc8c90eadacd5d660b53842b4e5b63d675ae0c919050565b816022036110fe57507fb27b35a8236d0f9b6692820429c025ed58ed378dc98d316b762f0c865c68be6f919050565b8160230361112d57507fdc567ad38d9b90cc9bea4e0f82ec05eca10b3aa94eddc7b63c4fd20c001bb53b919050565b8160240361115c57507fb208dfc457c8b30661ae49544c8e57399818095aab8dd7a426fb8dd56bb8c559919050565b8160250361118b57507fc4a72e1ff84f7a22631f3f95c61c392f98f52050360215a9d7e75d79b0bcd2ca919050565b816026036111ba57507fbb093ec8c0d7defb1de668b5b5dd4f2619e5cd92d29cc144862364a83ab993a8919050565b816027036111e957507fe341796f2fe3975012c1e6badfa2e9c4523e43f911dc845082c3f4d7b4ff871d919050565b8160280361121857507f42d356a11a0b39243eca3c3263299cb6f8c3e9728af6d9d8b0ddb6d354f1890d919050565b8160290361124757507f0ce506e834e3a50a33f80074bc7fa16cf3c0712b36a41b69699177ea25de6c30919050565b81602a0361127657507fd8fa5bf130aeb7756b1ed09090cc80ed78dae0617978540f0fabd06dfb978938919050565b81602b036112a557507feed69a20fe36eb604f2153efa3b01c0e143cdf02229a1b8f741c9c2719059eb0919050565b81602c036112d457507f303c9c566ebf5bfe252796e5c131a99801226152a514688b5ca6883e99031d88919050565b81602d0361130357507fc7c3765ba96cfbccf3ae718393fa89791070cc8cd85f280b6ac46aea10d96042919050565b81602e0361133257507f1ca65b0a2b8034ee6bfb1fa4526832304e393af835c2c42b4dace58048746800919050565b81602f0361136157507f957add5e02350fd47de3a8e1da38fd774ceb31214d5897ed6315740a83cd634a919050565b8160300361139057507f787892cb439d5d358870774e163557cf02ec3cb87be6fde11abf1acee14eeaa4919050565b816031036113bf57507f047c0962d4f5c8f60692c587de07739528c4d2059240d61dd34d2a547a438ee6919050565b816032036113ee57507fc18727efc9e4df63020dcd90edc17dfd2ad14f02328c912b13898e0b53735556919050565b8160330361141d57507fe38b9218987e451effe1648c3c9851ad03b64b052a5a3f5ca30f4d7b1ecf7120919050565b8160340361144c57507f0e48ecb1a5418e6218289acc8cf723e67ac6eae3ecb80f644336ab4365a2f2b2919050565b8160350361147b57507fd60e66f5b8cd08d71a1a4d7798952a7afa5a6e93a886c587a46a5500ebef4a60919050565b816036036114aa57507f5162aa9c31d9105f689cf6e71e19548bc9f0218b7d0f99ff7fa8bc2f19c68462919050565b816037036114d957507f6fa8519b4b0e8fb97a9b618e97627d97b9b9d29d04521fd96472e9c502700568919050565b8160380361150857507f41f5dcf0cdee270a2ad9a5f8130aaaab94b237463e09757c28b0321f09e24eb0919050565b8160390361153757507f87a119239fa90732197108adfd029938b4743874d959d3da79b3a30f4832899e919050565b81603a0361156657507f8e96dbaa5c72e84a5297b040ccc1a60750a3201166e3b7740d352837233608a1919050565b81603b0361159557507f01605058d167ce967af8c475d2f6c341c3e0b437babf899c9da73a520aa4ecb5919050565b81603c036115c457507f04529eb80532c5118949d700d8dfd2aa86850b1c6479b26276b9486784a145ff919050565b81603d036115f357507fd191814ad13f27361ae20a46cbac8f6e76c10ebe9af0806d6720492ee2f296f0919050565b81603e0361162257507fa28df63f78821060570da371c0be1312188346b92a7965cc4b980b26c134a4d7919050565b81603f0361165157507fb48a92d40b61dc995ceecee4cded6415050dcece448b1e0b5e5b6a0e6981f3ef919050565b60405162461bcd60e51b8152602060048201526012602482015271125b99195e081bdd5d081bd988189bdd5b9960721b6044820152606401610482565b60028054600091906116a290600190612339565b815481106116b2576116b26122bd565b9060005260206000200154905090565b6000806000806116d06117f4565b6007544310156116f25760405162461bcd60e51b8152600401610482906122d3565b6117036116fe866124b0565b61183a565b6117445760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21039bab136b4b9b9b4b7b760711b6044820152606401610482565b61174c6105a3565b600061175786611a51565b9050600061176c611767886124b0565b611b1b565b9050600061178161177c896124b0565b611b79565b6006805491925060019060006117978385612280565b9250508190555081336001600160a01b03167f167ce04d2aa1981994d3a31695da0d785373335b1078cec239a1a3a2c76755558387878e6040516117de949392919061260b565b60405180910390a3989097509195509350915050565b60005460ff16156108875760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610482565b600081604001515160000361185157506000919050565b604082015180516004919061186890600190612339565b81518110611878576118786122bd565b602002602001015160200151836040015160008151811061189b5761189b6122bd565b6020026020010151602001516118b19190612339565b106118be57506000919050565b604082604001516000815181106118d7576118d76122bd565b602002602001015160200151106118f057506000919050565b60005b60018360400151516119059190612339565b81101561197c5782604001518181518110611922576119226122bd565b60200260200101516020015183604001518260016119409190612280565b81518110611950576119506122bd565b6020026020010151602001511061196a5750600092915050565b8061197481612360565b9150506118f3565b50600061198883611b1b565b9050611996610100826126cc565b835111156119a75750600092915050565b600060108210156119c4576119bd600183612339565b9050611a2a565b8360400151516001036119df576119bd600483901c83612339565b600484604001516000815181106119f8576119f86122bd565b602002602001015160200151611a0e9190612339565b611a19906001612280565b611a27906001901b83612339565b90505b611a36610100826126cc565b845111611a47575060009392505050565b5060019392505050565b600154600090815b611a6660408501856126eb565b9050811015611af8576000611a7e60408601866126eb565b83818110611a8e57611a8e6122bd565b9050604002016000013590506000858060400190611aac91906126eb565b84818110611abc57611abc6122bd565b9050604002016020013590506000611ad48383611bad565b905083600003611ae2578095505b5050508080611af090612360565b915050611a59565b506001546000611b088383612339565b9050611b1381611d1d565b505050919050565b600080805b836040015151811015611b725783604001518181518110611b4357611b436122bd565b6020026020010151602001516001901b82611b5e9190612280565b915080611b6a81612360565b915050611b20565b5092915050565b60008160400151604051602001611b909190612735565b604051602081830303815290604052805190602001209050919050565b600080611bbc600154846108d5565b90506000611bcd6001851b83612280565b600254909150611bdf90600190612339565b6001901b811115611c2857611bf2610978565b611bfa611d55565b600254611c0990600190612339565b6001901b811115611c2157611c1c611d55565b611bfa565b6002546003555b600254611c3485611de3565b60008087875b84811015611cff57611c4f600288831c61234c565b600003611c95578160028281548110611c6a57611c6a6122bd565b600091825260209091200155611c81816001612280565b600355611c8f600186612339565b50611cff565b60028181548110611ca857611ca86122bd565b906000526020600020015493508192508383604051602001611cd4929190918252602082015260400190565b6040516020818303038152906040528051906020012091508080611cf790612360565b915050611c3a565b50611d0d6001891b87612280565b6001555093979650505050505050565b6000611d2a8260646126cc565b611d36906103e8612280565b600454909150611d51906001600160a01b0316333084611f01565b5050565b6002805490600090611d68600184612339565b81548110611d7857611d786122bd565b60009182526020822001549150611d93610339600185612339565b905060028282604051602001611db3929190918252602082015260400190565b60408051601f19818403018152919052805160209182012082546001810184556000938452919092200155505050565b806003541115611df05750565b600280546003549091600091611e0890600190612339565b81548110611e1857611e186122bd565b906000526020600020015490506000611e3960016003546103399190612339565b6003549091505b838110156108815760408051602080820186905281830185905282518083038401815260609092019092528051910120600154611e8190600290841c61234c565b600003611eca57809350611e9482610a8f565b9250858210611ec5578060028381548110611eb157611eb16122bd565b600091825260209091200155505050505050565b611eee565b60028281548110611edd57611edd6122bd565b906000526020600020015493508092505b5080611ef981612360565b915050611e40565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611f5b908590611f61565b50505050565b6000611fb6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661203b9092919063ffffffff16565b9050805160001480611fd7575080806020019051810190611fd79190612784565b6120365760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610482565b505050565b606061204a8484600085612052565b949350505050565b6060824710156120b35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610482565b600080866001600160a01b031685876040516120cf91906127ca565b60006040518083038185875af1925050503d806000811461210c576040519150601f19603f3d011682016040523d82523d6000602084013e612111565b606091505b50915091506121228783838761212d565b979650505050505050565b6060831561219c578251600003612195576001600160a01b0385163b6121955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610482565b508161204a565b61204a83838151156121b15781518083602001fd5b8060405162461bcd60e51b815260040161048291906127e6565b6000602082840312156121dd57600080fd5b81356001600160801b03811681146108ce57600080fd5b60006020828403121561220657600080fd5b5035919050565b6000806040838503121561222057600080fd5b50508035926020909101359150565b60006020828403121561224157600080fd5b813567ffffffffffffffff81111561225857600080fd5b8201606081850312156108ce57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109095761090961226a565b634e487b7160e01b600052601260045260246000fd5b6000826122b8576122b8612293565b500490565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f436f6e747261637420686173206e6f74206c61756e636865642e000000000000604082015260600190565b60006020828403121561231c57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b818103818111156109095761090961226a565b60008261235b5761235b612293565b500690565b6000600182016123725761237261226a565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156123b2576123b2612379565b60405290565b6040516060810167ffffffffffffffff811182821017156123b2576123b2612379565b604051601f8201601f1916810167ffffffffffffffff8111828210171561240457612404612379565b604052919050565b600082601f83011261241d57600080fd5b8135602067ffffffffffffffff82111561243957612439612379565b612447818360051b016123db565b82815260069290921b8401810191818101908684111561246657600080fd5b8286015b848110156124a557604081890312156124835760008081fd5b61248b61238f565b81358152848201358582015283529183019160400161246a565b509695505050505050565b6000606082360312156124c257600080fd5b6124ca6123b8565b8235815260208084013567ffffffffffffffff808211156124ea57600080fd5b9085019036601f8301126124fd57600080fd5b81358181111561250f5761250f612379565b612521601f8201601f191685016123db565b818152368583860101111561253557600080fd5b8185850186830137600085838301015280858701525050604086013592508083111561256057600080fd5b505061256e3682860161240c565b60408301525092915050565b6000808335601e1984360301811261259157600080fd5b830160208101925035905067ffffffffffffffff8111156125b157600080fd5b8060061b36038213156125c357600080fd5b9250929050565b8183526000602080850194508260005b8581101561260057813587528282013583880152604096870196909101906001016125da565b509495945050505050565b848152836020820152826040820152608060608201528135608082015260006020830135601e1984360301811261264157600080fd5b830160208101903567ffffffffffffffff81111561265e57600080fd5b80360382131561266d57600080fd5b606060a08501528060e08501526101008183828701376000858301820152601f8201601f1916850192506126a4604087018761257a565b925060808685030160c08701526126be82850184836125ca565b9a9950505050505050505050565b60008160001904831182151516156126e6576126e661226a565b500290565b6000808335601e1984360301811261270257600080fd5b83018035915067ffffffffffffffff82111561271d57600080fd5b6020019150600681901b36038213156125c357600080fd5b602080825282518282018190526000919060409081850190868401855b8281101561277757815180518552860151868501529284019290850190600101612752565b5091979650505050505050565b60006020828403121561279657600080fd5b815180151581146108ce57600080fd5b60005b838110156127c15781810151838201526020016127a9565b50506000910152565b600082516127dc8184602087016127a6565b9190910192915050565b60208152600082518060208401526128058160408501602087016127a6565b601f01601f1916919091016040019291505056fea2646970667358221220ed2c4024b73a78a36770d5cb3a4655f07563f3917b90ca4f96db5d978ae7e61b64736f6c63430008100033608060405234801561001057600080fd5b5060405161067038038061067083398101604081905261002f9161014a565b6100383361009a565b806001600160401b0381111561005057610050610163565b604051908082528060200260200182016040528015610079578160200160208202803683370190505b50805161008e916001916020909101906100ea565b50506000600255610179565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610125579160200282015b8281111561012557825182559160200191906001019061010a565b50610131929150610135565b5090565b5b808211156101315760008155600101610136565b60006020828403121561015c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6104e8806101886000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d557806396e494e8146100f0578063e0886f9014610103578063f2fde38b1461011657600080fd5b80631d1a696d146100825780632d287e43146100aa578063715018a6146100cb575b600080fd5b6100956100903660046103e3565b610129565b60405190151581526020015b60405180910390f35b6100bd6100b83660046103e3565b610194565b6040519081526020016100a1565b6100d36101ee565b005b6000546040516001600160a01b0390911681526020016100a1565b6100956100fe3660046103e3565b610202565b6100bd6101113660046103e3565b610237565b6100d36101243660046103fc565b610297565b60008061013d600254600180549050610310565b905060005b8181101561018a57836001828154811061015e5761015e610425565b906000526020600020015403610178575060019392505050565b8061018281610451565b915050610142565b5060009392505050565b6002546001546000919082906101aa908361046a565b905083600182815481106101c0576101c0610425565b90600052602060002001819055506001600260008282546101e1919061048c565b9091555091949350505050565b6101f661032a565b6102006000610384565b565b6001546002546000919083108015610230575080610222600254836103d4565b61022c919061049f565b8310155b9392505050565b600061024282610202565b6102675760405163b52d71f360e01b8152600481018390526024015b60405180910390fd5b60018054610275908461046a565b8154811061028557610285610425565b90600052602060002001549050919050565b61029f61032a565b6001600160a01b0381166103045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61030d81610384565b50565b600081831061031f5781610321565b825b90505b92915050565b6000546001600160a01b031633146102005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081831161031f5781610321565b6000602082840312156103f557600080fd5b5035919050565b60006020828403121561040e57600080fd5b81356001600160a01b038116811461023057600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016104635761046361043b565b5060010190565b60008261048757634e487b7160e01b600052601260045260246000fd5b500690565b808201808211156103245761032461043b565b818103818111156103245761032461043b56fea26469706673582212200a156351fbc1507eaca28f51609c390dc529eafe4c1360643f3de61f8868cff064736f6c63430008100033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSubmission";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "startMerkleRoot";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "submissionIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "flowLength";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "context";
            readonly type: "bytes32";
        }];
        readonly name: "NewEpoch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "Paused";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "identity";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "submissionIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startPos";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "length";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "tags";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "root";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "height";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct SubmissionNode[]";
                readonly name: "nodes";
                readonly type: "tuple[]";
            }];
            readonly indexed: false;
            readonly internalType: "struct Submission";
            readonly name: "submission";
            readonly type: "tuple";
        }];
        readonly name: "Submit";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "Unpaused";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "commitRoot";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "currentLength";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "epoch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "epochStartPosition";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "firstBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getContext";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "epoch";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "mineStart";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "flowRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "flowLength";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockDigest";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct MineContext";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "digest";
            readonly type: "bytes32";
        }];
        readonly name: "getEpochRange";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "start";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "end";
                readonly type: "uint128";
            }];
            readonly internalType: "struct EpochRange";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "makeContext";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "makeContextWithResult";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "epoch";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "mineStart";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "flowRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "flowLength";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockDigest";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct MineContext";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_length";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "alignExp";
            readonly type: "uint256";
        }];
        readonly name: "nextAlign";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_length";
            readonly type: "uint256";
        }];
        readonly name: "nextPow2";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "numSubmissions";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "paused";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "targetPosition";
            readonly type: "uint128";
        }];
        readonly name: "queryContextAtPosition";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "start";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "end";
                readonly type: "uint128";
            }, {
                readonly internalType: "bytes32";
                readonly name: "digest";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct EpochRangeWithContextDigest";
            readonly name: "range";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "root";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "rootHistory";
        readonly outputs: readonly [{
            readonly internalType: "contract IDigestHistory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "submissionIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "length";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "tags";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "root";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "height";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct SubmissionNode[]";
                readonly name: "nodes";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Submission";
            readonly name: "submission";
            readonly type: "tuple";
        }];
        readonly name: "submit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "token";
        readonly outputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unstagedHeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "height";
            readonly type: "uint256";
        }];
        readonly name: "zeros";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): FlowInterface;
    static connect(address: string, runner?: ContractRunner | null): Flow;
}
export {};
//# sourceMappingURL=Flow__factory.d.ts.map